<!doctype html>
<html lang="it">
<head>
  <meta charset="UTF-8" />
  <title>Mappa Meteo Calabria</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <style>
    body, html { margin: 0; padding: 0; height: 100%; font-family: Arial, sans-serif; }
    #map { height: 80vh; width: 100%; }
    table { width: 100%; border-collapse: collapse; font-size: 14px; }
    th, td { padding: 8px; text-align: center; border: 1px solid #ccc; }
    th { background-color: #f2f2f2; }
    .temperature-label { display: flex; align-items: center; justify-content: center; border-radius: 50%; width: 40px; height: 40px; font-weight: bold; font-size: 14px; border: 2px solid #000; color: #000; }
    .popup-title { font-size: 16px; font-weight: bold; }
    .popup-sub { font-size: 12px; color: #666; margin-bottom: 6px; }
    .popup-data { margin: 2px 0; font-size: 14px; }
    .bold { font-weight: bold; }
    .webcam-preview { width: 100%; max-height: 100px; object-fit: cover; margin-top: 5px; border-radius: 5px; }
    .webcam-missing { font-size: 12px; color: #777; margin-top: 5px; text-align: center; }
    .btn { display: inline-block; padding: 6px 10px; margin: 5px 5px 0 0; background-color: #007bff; color: white; border: none; border-radius: 3px; cursor: pointer; text-decoration: none; font-size: 12px; }
    .btn:hover { background-color: #0056b3; }
    #popup-grafico { position: fixed; top: 10%; left: 5%; width: 90%; height: 80%; background: white; border: 2px solid #007bff; border-radius: 8px; display: none; flex-direction: column; z-index: 10000; }
    #popup-grafico iframe { flex: 1; width: 100%; border: none; }
    #popup-grafico .close-btn { background: red; color: white; padding: 5px; border: none; width: 100%; font-weight: bold; cursor: pointer; }
    a.btn { color: white !important; }
  </style>
</head>
<body>
  <div id="map"></div>
  <div id="tabella"></div>

  <div id="popup-grafico">
    <button class="close-btn" onclick="chiudiGrafico()">Chiudi</button>
    <iframe id="grafico-frame" src=""></iframe>
  </div>

  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
  <script>
    function calcolaCondizioneTermica(temp, umidita) {
      if (isNaN(temp) || isNaN(umidita)) return "-";
      let condizione = "";
      if (temp <= -10) condizione = "Gelo intenso";
      else if (temp <= -5) condizione = "Gelo";
      else if (temp <= 0) condizione = "Freddo intenso";
      else if (temp <= 5) condizione = "Freddo";
      else if (temp <= 15) condizione = "Fresco";
      else if (temp <= 22) condizione = "Confortevole";
      else if (temp <= 26) condizione = "Molto confortevole";
      else if (temp <= 29) condizione = "Tiepido";
      else if (temp <= 33) condizione = "Caldo";
      else if (temp <= 37) condizione = "Caldo intenso";
      else if (temp <= 42) condizione = "Caldo estremo";
      else condizione = "Estremo";

      if (umidita < 30) condizione += " secco";
      else if (umidita >= 60 && umidita <= 89) condizione += " umido";
      else if (umidita >= 90) condizione += " molto umido";

      return condizione;
    }

    const stazioni = [
      { nome: "Cosenza - Vaglio Lise", lat: 39.32, lon: 16.26, quota: "208 m", provincia: "Cosenza", regione: "Calabria", area: "Valle del Crati", stationId: "ICOSEN11", apiKey: "03d402e1e8844ac49402e1e8844ac419", webcam: "", linkStazione: "https://esempio.it/stazioni/cosenza-vaglio" },
      { nome: "Amantea Spiaggia", lat: 39.13, lon: 16.07, quota: "0 m", provincia: "Cosenza", regione: "Calabria", area: "Costa Tirrenica Cosentina", stationId: "IAMANT6", apiKey: "844d02e7e12049ef8d02e7e120b9ef68", webcam: "https://meteologullo.github.io/immagine_provvisoria_amantea.jpg", linkStazione: "https://esempio.it/stazioni/amantea-spiaggia" },
      { nome: "Montescuro - Celico", lat: 39.33, lon: 16.4, quota: "1643 m", provincia: "Cosenza", regione: "Calabria", area: "Vetta della Sila Grande", stationId: "ICELIC1", apiKey: "844d02e7e12049ef8d02e7e120b9ef68", webcam: "", linkStazione: "https://esempio.it/stazioni/montescuro-celico" },
      { nome: "Cosenza - Campagnano", lat: 39.31, lon: 16.23, quota: "234 m", provincia: "Cosenza", regione: "Calabria", area: "Valle del Crati", stationId: "ICOSEN20", apiKey: "844d02e7e12049ef8d02e7e120b9ef68", webcam: "", linkStazione: "https://esempio.it/stazioni/campagnano" },
      { nome: "Mendicino - Tivolille Pasquali", lat: 39.28, lon: 16.2, quota: "431 m", provincia: "Cosenza", regione: "Calabria", area: "Catena Costiera", stationId: "IMENDI13", apiKey: "844d02e7e12049ef8d02e7e120b9ef68", webcam: "", linkStazione: "https://esempio.it/stazioni/mendicino" },
      { nome: "Casali del Manco - Morelli Soprana", lat: 39.28, lon: 16.29, quota: "389 m", provincia: "Cosenza", regione: "Calabria", area: "collina Valle del Crati", stationId: "ICASAL40", apiKey: "b368cd08174d424fa8cd08174d424f20", webcam: "", linkStazione: "https://esempio.it/stazioni/morelli-soprana" }
    ];

    var bounds = L.latLngBounds([]);
    var map = L.map("map");
    stazioni.forEach((s) => bounds.extend([s.lat, s.lon]));
    map.fitBounds(bounds);

    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
      maxZoom: 18,
      attribution: "&copy; OpenStreetMap contributors",
    }).addTo(map);

    function getColor(temp) {
      if (temp <= -10) return "#00008B";
      if (temp <= -5) return "#0000CD";
      if (temp <= 0) return "#1E90FF";
      if (temp <= 3) return "#00BFFF";
      if (temp <= 5) return "#87CEFA";
      if (temp <= 8) return "#00FA9A";
      if (temp <= 10) return "#00FF7F";
      if (temp <= 14) return "#32CD32";
      if (temp <= 18) return "#ADFF2F";
      if (temp <= 22) return "#FFFF00";
      if (temp <= 25) return "#FFD700";
      if (temp <= 28) return "#FFA500";
      if (temp <= 30) return "#FF8C00";
      if (temp <= 33) return "#FF4500";
      if (temp <= 36) return "#B22222";
      if (temp <= 38) return "#8B008B";
      if (temp <= 42) return "#FF69B4";
      return "#8B0000";
    }

    function apriGrafico(id) {
      document.getElementById("grafico-frame").src = `https://www.wunderground.com/dashboard/pws/${id}/graph`;
      document.getElementById("popup-grafico").style.display = "flex";
    }

    function chiudiGrafico() {
      document.getElementById("popup-grafico").style.display = "none";
      document.getElementById("grafico-frame").src = "";
    }

    let datiTabella = [];

    stazioni.forEach((s) => {
      if (s.apiKey) {
        fetch(`https://api.weather.com/v2/pws/observations/current?stationId=${s.stationId}&format=json&units=m&apiKey=${s.apiKey}`)
          .then(res => res.json())
          .then(data => aggiungiMarker(s, data.observations[0]));
      } else {
        aggiungiMarker(s, null);
      }
    });

    function aggiungiMarker(staz, obs) {
      let temp = obs ? obs.metric.temp.toFixed(1) : "--";
      let um = obs ? obs.humidity || "-" : "-";
      let vento = obs ? obs.windSpeed || "-" : "-";
      let raffica = obs ? obs.windGust || "-" : "-";
      let pioggia = obs ? obs.metric.precipTotal || "0" : "-";
      let orario = obs ? new Date(obs.obsTimeUtc).toLocaleString("it-IT") : "Dati non disponibili";
      const colore = temp !== "--" ? getColor(parseFloat(temp)) : "#999999";

      var icona = L.divIcon({
        className: "temperature-label",
        html: `<span style="color:${parseFloat(temp) > 5 ? "white" : "black"}">${temp}°</span>`,
        iconSize: [40, 40],
        iconAnchor: [20, 20]
      });

      // Aggiungi il marker di Cosenza Vaglio Lise in una posizione preferita (più sopra)
      if (staz.nome === "Cosenza - Vaglio Lise") {
        var marker = L.marker([39.33, 16.23], { icon: icona }).addTo(map); // Posizione leggermente sopra rispetto a Campagnano
      }
      // Aggiungi il marker di Cosenza Campagnano
      else if (staz.nome === "Cosenza - Campagnano") {
        var marker = L.marker([39.32, 16.26], { icon: icona }).addTo(map); // Posizione originale
      }
      else {
        var marker = L.marker([staz.lat, staz.lon], { icon: icona }).addTo(map);
      }

      marker.getElement().style.backgroundColor = colore;

      if (temp !== "--") {
        const condizione = calcolaCondizioneTermica(parseFloat(temp), parseInt(um));

        let popup = `
          <div class="popup-title">${staz.nome}</div>
          <div class="popup-sub">${staz.provincia} - ${staz.regione} - ${staz.quota} - ${staz.area}</div>
          <div class="popup-data"><span class="bold">Temp:</span> ${temp}°C</div>
          <div class="popup-data"><span class="bold">Umidità:</span> ${um}%</div>
          <div class="popup-data"><span class="bold">Condizione termica:</span> ${condizione}</div>
          <div class="popup-data"><span class="bold">Vento:</span> ${vento} km/h / <span class="bold">Raffica:</span> ${raffica} km/h</div>
          <div class="popup-data"><span class="bold">Pioggia:</span> ${pioggia} mm</div>
          <div class="popup-data"><span class="bold">Aggiornamento:</span> ${orario}</div>
          <button class="btn" onclick="apriGrafico('${staz.stationId}')">Grafico temperatura</button>
          <a class="btn" href="${staz.linkStazione}" target="_blank">Pagina della stazione</a>
          ${staz.webcam ? `<img src="${staz.webcam}" class="webcam-preview">` : '<div class="webcam-missing">Webcam non disponibile</div>'}
        `;

        marker.bindPopup(popup);

        datiTabella.push({ nome: staz.nome, temp, umidita: um, pioggia, raffica, condizione });
        datiTabella.sort((a, b) => b.temp - a.temp);
        aggiornaTabella();
      }
    }

    function aggiornaTabella() {
      let html = "<table><thead><tr><th>Stazione</th><th>Temperatura</th><th>Umidità</th><th>Pioggia</th><th>Raffica</th><th>Condizione termica</th></tr></thead><tbody>";
      datiTabella.forEach(s => {
        html += `<tr>
          <td>${s.nome}</td>
          <td style="background-color:${getColor(parseFloat(s.temp))};color:${parseFloat(s.temp) > 5 ? "white" : "black"}">${s.temp}°C</td>
          <td>${s.umidita}%</td>
          <td>${s.pioggia} mm</td>
          <td>${s.raffica} km/h</td>
          <td><strong>${s.condizione}</strong></td>
        </tr>`;
      });
      html += "</tbody></table>";
      document.getElementById("tabella").innerHTML = html;
    }
  </script>
</body>
</html>
